/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get server health status */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json; charset=utf-8": components["schemas"]["HealthResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/emails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all emails with pagination */
        get: {
            parameters: {
                query?: {
                    page?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json; charset=utf-8": components["schemas"]["EmailsListResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/emails/{imap_uid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a specific email by IMAP UID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description IMAP UID of the email */
                    imap_uid: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json; charset=utf-8": components["schemas"]["EmailDetailResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** EmailDetailResponse */
        EmailDetailResponse: {
            email: components["schemas"]["EmailResponse"];
        };
        /**
         * EmailListItem
         * @description Simplified email for list view
         */
        EmailListItem: {
            /** Format: int64 */
            imap_uid: number;
            subject?: string;
            from_address?: string;
            to_address?: string;
            created_at: string;
            /** Format: int64 */
            imap_config_id?: number;
        };
        /**
         * EmailResponse
         * @description API-friendly email representation with RFC3339 datetime strings
         */
        EmailResponse: {
            /** Format: int64 */
            imap_uid: number;
            message_id?: string;
            subject?: string;
            from_address?: string;
            to_address?: string;
            cc_address?: string;
            bcc_address?: string;
            reply_to?: string;
            date_sent?: string;
            date_maildog_fetched: string;
            body_text?: string;
            body_html?: string;
            flags?: string;
            /** Format: int64 */
            size_bytes?: number;
            has_attachments?: boolean;
            folder_name?: string;
            created_at: string;
            updated_at: string;
            /** Format: int64 */
            imap_config_id?: number;
        };
        /** EmailsListResponse */
        EmailsListResponse: {
            emails: components["schemas"]["EmailListItem"][];
            /** Format: int64 */
            total: number;
            /** Format: int64 */
            page: number;
            /** Format: int64 */
            page_size: number;
        };
        /** HealthResponse */
        HealthResponse: {
            status: string;
            version: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
