/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MailIndexRouteImport } from './routes/$mail/index'
import { Route as LogoutLayoutRouteImport } from './routes/logout/_layout'
import { Route as LoginLayoutRouteImport } from './routes/login/_layout'
import { Route as ConfigureLayoutRouteImport } from './routes/configure/_layout'
import { Route as LogoutLayoutIndexRouteImport } from './routes/logout/_layout.index'
import { Route as LoginLayoutIndexRouteImport } from './routes/login/_layout.index'
import { Route as ConfigureLayoutIndexRouteImport } from './routes/configure/_layout.index'
import { Route as LoginLayoutCallbackRouteImport } from './routes/login/_layout.callback'
import { Route as ConfigureLayoutInstanceIndexRouteImport } from './routes/configure/_layout.instance/index'
import { Route as ConfigureLayoutInstanceHealthcheckRouteImport } from './routes/configure/_layout.instance/healthcheck'

const LogoutRouteImport = createFileRoute('/logout')()
const LoginRouteImport = createFileRoute('/login')()
const ConfigureRouteImport = createFileRoute('/configure')()
const DebugLazyRouteImport = createFileRoute('/debug')()
const IndexLazyRouteImport = createFileRoute('/')()
const MailConfigImap_uidLazyRouteImport = createFileRoute(
  '/mail/$config/$imap_uid',
)()
const LoginLayoutCreateLazyRouteImport = createFileRoute(
  '/login/_layout/create',
)()

const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfigureRoute = ConfigureRouteImport.update({
  id: '/configure',
  path: '/configure',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugLazyRoute = DebugLazyRouteImport.update({
  id: '/debug',
  path: '/debug',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/debug.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const MailIndexRoute = MailIndexRouteImport.update({
  id: '/$mail/',
  path: '/$mail/',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutLayoutRoute = LogoutLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => LogoutRoute,
} as any)
const LoginLayoutRoute = LoginLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => LoginRoute,
} as any)
const ConfigureLayoutRoute = ConfigureLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ConfigureRoute,
} as any)
const LogoutLayoutIndexRoute = LogoutLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LogoutLayoutRoute,
} as any)
const LoginLayoutIndexRoute = LoginLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginLayoutRoute,
} as any)
const ConfigureLayoutIndexRoute = ConfigureLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConfigureLayoutRoute,
} as any)
const MailConfigImap_uidLazyRoute = MailConfigImap_uidLazyRouteImport.update({
  id: '/mail/$config/$imap_uid',
  path: '/mail/$config/$imap_uid',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/mail.$config.$imap_uid.lazy').then((d) => d.Route),
)
const LoginLayoutCreateLazyRoute = LoginLayoutCreateLazyRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => LoginLayoutRoute,
} as any).lazy(() =>
  import('./routes/login/_layout.create.lazy').then((d) => d.Route),
)
const LoginLayoutCallbackRoute = LoginLayoutCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => LoginLayoutRoute,
} as any)
const ConfigureLayoutInstanceIndexRoute =
  ConfigureLayoutInstanceIndexRouteImport.update({
    id: '/instance/',
    path: '/instance/',
    getParentRoute: () => ConfigureLayoutRoute,
  } as any)
const ConfigureLayoutInstanceHealthcheckRoute =
  ConfigureLayoutInstanceHealthcheckRouteImport.update({
    id: '/instance/healthcheck',
    path: '/instance/healthcheck',
    getParentRoute: () => ConfigureLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/debug': typeof DebugLazyRoute
  '/configure': typeof ConfigureLayoutRouteWithChildren
  '/login': typeof LoginLayoutRouteWithChildren
  '/logout': typeof LogoutLayoutRouteWithChildren
  '/$mail': typeof MailIndexRoute
  '/login/callback': typeof LoginLayoutCallbackRoute
  '/login/create': typeof LoginLayoutCreateLazyRoute
  '/mail/$config/$imap_uid': typeof MailConfigImap_uidLazyRoute
  '/configure/': typeof ConfigureLayoutIndexRoute
  '/login/': typeof LoginLayoutIndexRoute
  '/logout/': typeof LogoutLayoutIndexRoute
  '/configure/instance/healthcheck': typeof ConfigureLayoutInstanceHealthcheckRoute
  '/configure/instance': typeof ConfigureLayoutInstanceIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/debug': typeof DebugLazyRoute
  '/configure': typeof ConfigureLayoutIndexRoute
  '/login': typeof LoginLayoutIndexRoute
  '/logout': typeof LogoutLayoutIndexRoute
  '/$mail': typeof MailIndexRoute
  '/login/callback': typeof LoginLayoutCallbackRoute
  '/login/create': typeof LoginLayoutCreateLazyRoute
  '/mail/$config/$imap_uid': typeof MailConfigImap_uidLazyRoute
  '/configure/instance/healthcheck': typeof ConfigureLayoutInstanceHealthcheckRoute
  '/configure/instance': typeof ConfigureLayoutInstanceIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/debug': typeof DebugLazyRoute
  '/configure': typeof ConfigureRouteWithChildren
  '/configure/_layout': typeof ConfigureLayoutRouteWithChildren
  '/login': typeof LoginRouteWithChildren
  '/login/_layout': typeof LoginLayoutRouteWithChildren
  '/logout': typeof LogoutRouteWithChildren
  '/logout/_layout': typeof LogoutLayoutRouteWithChildren
  '/$mail/': typeof MailIndexRoute
  '/login/_layout/callback': typeof LoginLayoutCallbackRoute
  '/login/_layout/create': typeof LoginLayoutCreateLazyRoute
  '/mail/$config/$imap_uid': typeof MailConfigImap_uidLazyRoute
  '/configure/_layout/': typeof ConfigureLayoutIndexRoute
  '/login/_layout/': typeof LoginLayoutIndexRoute
  '/logout/_layout/': typeof LogoutLayoutIndexRoute
  '/configure/_layout/instance/healthcheck': typeof ConfigureLayoutInstanceHealthcheckRoute
  '/configure/_layout/instance/': typeof ConfigureLayoutInstanceIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/debug'
    | '/configure'
    | '/login'
    | '/logout'
    | '/$mail'
    | '/login/callback'
    | '/login/create'
    | '/mail/$config/$imap_uid'
    | '/configure/'
    | '/login/'
    | '/logout/'
    | '/configure/instance/healthcheck'
    | '/configure/instance'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/debug'
    | '/configure'
    | '/login'
    | '/logout'
    | '/$mail'
    | '/login/callback'
    | '/login/create'
    | '/mail/$config/$imap_uid'
    | '/configure/instance/healthcheck'
    | '/configure/instance'
  id:
    | '__root__'
    | '/'
    | '/debug'
    | '/configure'
    | '/configure/_layout'
    | '/login'
    | '/login/_layout'
    | '/logout'
    | '/logout/_layout'
    | '/$mail/'
    | '/login/_layout/callback'
    | '/login/_layout/create'
    | '/mail/$config/$imap_uid'
    | '/configure/_layout/'
    | '/login/_layout/'
    | '/logout/_layout/'
    | '/configure/_layout/instance/healthcheck'
    | '/configure/_layout/instance/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DebugLazyRoute: typeof DebugLazyRoute
  ConfigureRoute: typeof ConfigureRouteWithChildren
  LoginRoute: typeof LoginRouteWithChildren
  LogoutRoute: typeof LogoutRouteWithChildren
  MailIndexRoute: typeof MailIndexRoute
  MailConfigImap_uidLazyRoute: typeof MailConfigImap_uidLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/configure': {
      id: '/configure'
      path: '/configure'
      fullPath: '/configure'
      preLoaderRoute: typeof ConfigureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug': {
      id: '/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof DebugLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$mail/': {
      id: '/$mail/'
      path: '/$mail'
      fullPath: '/$mail'
      preLoaderRoute: typeof MailIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout/_layout': {
      id: '/logout/_layout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutLayoutRouteImport
      parentRoute: typeof LogoutRoute
    }
    '/login/_layout': {
      id: '/login/_layout'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLayoutRouteImport
      parentRoute: typeof LoginRoute
    }
    '/configure/_layout': {
      id: '/configure/_layout'
      path: '/configure'
      fullPath: '/configure'
      preLoaderRoute: typeof ConfigureLayoutRouteImport
      parentRoute: typeof ConfigureRoute
    }
    '/logout/_layout/': {
      id: '/logout/_layout/'
      path: '/'
      fullPath: '/logout/'
      preLoaderRoute: typeof LogoutLayoutIndexRouteImport
      parentRoute: typeof LogoutLayoutRoute
    }
    '/login/_layout/': {
      id: '/login/_layout/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginLayoutIndexRouteImport
      parentRoute: typeof LoginLayoutRoute
    }
    '/configure/_layout/': {
      id: '/configure/_layout/'
      path: '/'
      fullPath: '/configure/'
      preLoaderRoute: typeof ConfigureLayoutIndexRouteImport
      parentRoute: typeof ConfigureLayoutRoute
    }
    '/mail/$config/$imap_uid': {
      id: '/mail/$config/$imap_uid'
      path: '/mail/$config/$imap_uid'
      fullPath: '/mail/$config/$imap_uid'
      preLoaderRoute: typeof MailConfigImap_uidLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/_layout/create': {
      id: '/login/_layout/create'
      path: '/create'
      fullPath: '/login/create'
      preLoaderRoute: typeof LoginLayoutCreateLazyRouteImport
      parentRoute: typeof LoginLayoutRoute
    }
    '/login/_layout/callback': {
      id: '/login/_layout/callback'
      path: '/callback'
      fullPath: '/login/callback'
      preLoaderRoute: typeof LoginLayoutCallbackRouteImport
      parentRoute: typeof LoginLayoutRoute
    }
    '/configure/_layout/instance/': {
      id: '/configure/_layout/instance/'
      path: '/instance'
      fullPath: '/configure/instance'
      preLoaderRoute: typeof ConfigureLayoutInstanceIndexRouteImport
      parentRoute: typeof ConfigureLayoutRoute
    }
    '/configure/_layout/instance/healthcheck': {
      id: '/configure/_layout/instance/healthcheck'
      path: '/instance/healthcheck'
      fullPath: '/configure/instance/healthcheck'
      preLoaderRoute: typeof ConfigureLayoutInstanceHealthcheckRouteImport
      parentRoute: typeof ConfigureLayoutRoute
    }
  }
}

interface ConfigureLayoutRouteChildren {
  ConfigureLayoutIndexRoute: typeof ConfigureLayoutIndexRoute
  ConfigureLayoutInstanceHealthcheckRoute: typeof ConfigureLayoutInstanceHealthcheckRoute
  ConfigureLayoutInstanceIndexRoute: typeof ConfigureLayoutInstanceIndexRoute
}

const ConfigureLayoutRouteChildren: ConfigureLayoutRouteChildren = {
  ConfigureLayoutIndexRoute: ConfigureLayoutIndexRoute,
  ConfigureLayoutInstanceHealthcheckRoute:
    ConfigureLayoutInstanceHealthcheckRoute,
  ConfigureLayoutInstanceIndexRoute: ConfigureLayoutInstanceIndexRoute,
}

const ConfigureLayoutRouteWithChildren = ConfigureLayoutRoute._addFileChildren(
  ConfigureLayoutRouteChildren,
)

interface ConfigureRouteChildren {
  ConfigureLayoutRoute: typeof ConfigureLayoutRouteWithChildren
}

const ConfigureRouteChildren: ConfigureRouteChildren = {
  ConfigureLayoutRoute: ConfigureLayoutRouteWithChildren,
}

const ConfigureRouteWithChildren = ConfigureRoute._addFileChildren(
  ConfigureRouteChildren,
)

interface LoginLayoutRouteChildren {
  LoginLayoutCallbackRoute: typeof LoginLayoutCallbackRoute
  LoginLayoutCreateLazyRoute: typeof LoginLayoutCreateLazyRoute
  LoginLayoutIndexRoute: typeof LoginLayoutIndexRoute
}

const LoginLayoutRouteChildren: LoginLayoutRouteChildren = {
  LoginLayoutCallbackRoute: LoginLayoutCallbackRoute,
  LoginLayoutCreateLazyRoute: LoginLayoutCreateLazyRoute,
  LoginLayoutIndexRoute: LoginLayoutIndexRoute,
}

const LoginLayoutRouteWithChildren = LoginLayoutRoute._addFileChildren(
  LoginLayoutRouteChildren,
)

interface LoginRouteChildren {
  LoginLayoutRoute: typeof LoginLayoutRouteWithChildren
}

const LoginRouteChildren: LoginRouteChildren = {
  LoginLayoutRoute: LoginLayoutRouteWithChildren,
}

const LoginRouteWithChildren = LoginRoute._addFileChildren(LoginRouteChildren)

interface LogoutLayoutRouteChildren {
  LogoutLayoutIndexRoute: typeof LogoutLayoutIndexRoute
}

const LogoutLayoutRouteChildren: LogoutLayoutRouteChildren = {
  LogoutLayoutIndexRoute: LogoutLayoutIndexRoute,
}

const LogoutLayoutRouteWithChildren = LogoutLayoutRoute._addFileChildren(
  LogoutLayoutRouteChildren,
)

interface LogoutRouteChildren {
  LogoutLayoutRoute: typeof LogoutLayoutRouteWithChildren
}

const LogoutRouteChildren: LogoutRouteChildren = {
  LogoutLayoutRoute: LogoutLayoutRouteWithChildren,
}

const LogoutRouteWithChildren =
  LogoutRoute._addFileChildren(LogoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DebugLazyRoute: DebugLazyRoute,
  ConfigureRoute: ConfigureRouteWithChildren,
  LoginRoute: LoginRouteWithChildren,
  LogoutRoute: LogoutRouteWithChildren,
  MailIndexRoute: MailIndexRoute,
  MailConfigImap_uidLazyRoute: MailConfigImap_uidLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
